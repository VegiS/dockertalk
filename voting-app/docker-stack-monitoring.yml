version: "3.3"

# Credits: This file taken and modified from the repo at: https://github.com/bvis/docker-prometheus-swarm
# Credits to: [Basilio Vera](https://github.com/bvis)

networks:
  monitoring:
  traefik:
    external: true

# Demo: Configs
# External configuration, provided by the Docker Swarm Manager(s)
configs:
  prometheus.yml:
    external: true
  alert.rules_services:
    external: true

services:

  # Collects and reports host and container level metrics (not application specific metrics) for Prometheus to scrape.
  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-v0.26.1}
    networks:
      - monitoring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock,readonly
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker
    deploy:
      # Demo: Global services run on all nodes
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 150M
        reservations:
          cpus: '0.10'
          memory: 64M

  # Expose node level metrics for Prometheus to scrape.
  node-exporter:
    image: basi/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    hostname: "{{.Node.ID}}"
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command: -collector.procfs "/host/proc" -collector.sysfs /host/sys -collector.textfile.directory /etc/node-exporter/ -collectors.enabled 'conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs' -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($$|/)"
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 32M
        reservations:
          cpus: '0.10'
          memory: 16M

  # Exposing Docker engine metrics via HTTP endpoint.
  docker-exporter:
    image: basi/socat:${DOCKER_EXPORTER_VERSION:-v0.1.0}
    networks:
      - monitoring
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.05'
          memory: 6M
        reservations:
          cpus: '0.05'
          memory: 4M

  # Prometheus Alert Manager - manage alarms
  alertmanager:
    image: basi/alertmanager:${ALERTMANAGER_VERSION:-v0.8.0}
    networks:
      - monitoring
      - traefik
    environment:
      SLACK_API: ${SLACK_API:-YOURTOKENGOESHERE}
      LOGSTASH_URL: http://logstash:8080/
    command: -config.file=/etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.01'
          memory: 32M
        reservations:
          cpus: '0.01'
          memory: 16M
      labels:
        - "traefik.port=9093"
        - "traefik.docker.network=traefik"
        - "traefik.frontend.rule=Host:alertmanager.${DOMAIN_NAME}"

  # Monitoring and metrics collection and search.
  prometheus:
    image: basi/prometheus-swarm:${PROMETHEUS_SWARM_VERSION:-latest}
    networks:
      - monitoring
      - traefik
    command: -config.file=/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles -alertmanager.url=http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 128M
      labels:
        - "traefik.port=9090"
        - "traefik.docker.network=traefik"
        - "traefik.frontend.rule=Host:prometheus.${DOMAIN_NAME}"
    # Demo: configs usage
    configs:
      - prometheus.yml
      - alert.rules_services

  # Monitoring dashboard
  grafana:
    image: basi/grafana:${GRAFANA_VERSION:-4.4.3}
    networks:
      - monitoring
      - traefik
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD:-admin}
      # Demo: Built-in service discovery via internal DNS.
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      ELASTICSEARCH_ENDPOINT: ${ES_ADDRESS:-http://elasticsearch:9200}
      ELASTICSEARCH_USER: ${ES_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ES_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 64M
        reservations:
          cpus: '0.50'
          memory: 32M
      labels:
        - "traefik.port=3000"
        - "traefik.docker.network=traefik"
        - "traefik.frontend.rule=Host:grafana.${DOMAIN_NAME}"
